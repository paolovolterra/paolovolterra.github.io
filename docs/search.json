[
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html",
    "href": "posts/2401_Colonnine/Colonnine.html",
    "title": "Bonus colonnine domestiche",
    "section": "",
    "text": "Contributo a privati e condomini per l’acquisto e l’installazione di infrastrutture per la ricarica dei veicoli alimentati ad energia elettrica\nAnalisi realizzata con #opendata di MIMIT, ISTAT e Opencup\nIl bonus colonnine domestiche è un contributo pari all’80% del prezzo di acquisto e posa delle infrastrutture per la ricarica dei veicoli alimentati ad energia elettrica (come ad esempio colonnine o wall box).\nIl limite massimo del contributo è di 1.500 euro per gli utenti privati e fino a 8.000 euro in caso di installazione sulle parti comuni degli edifici condominiali.\nPossono beneficiare del contributo le persone fisiche residenti in Italia e i condomìni.\nLe risorse a disposizione sono pari a:"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#spese-ad-oggi-ammesse-e-contributi-complessivi-concessi",
    "href": "posts/2401_Colonnine/Colonnine.html#spese-ad-oggi-ammesse-e-contributi-complessivi-concessi",
    "title": "Bonus colonnine domestiche",
    "section": "1.1 Spese ad oggi ammesse e contributi complessivi concessi",
    "text": "1.1 Spese ad oggi ammesse e contributi complessivi concessi\n\nos.chdir('D:\\\\files\\\\csv\\\\Colonnine_elettriche')\ndate_column = ['Data e ora presentazione domanda']\ncombined_df =  pd.read_csv('combined.csv', parse_dates=date_column, dayfirst=False)\ncombined_df[['Spese Ammesse (€)','Contributo Concesso (€)']].sum()\n\n\n\n    \n      \n      0\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\ncombined_df.describe()\n\n\n\n    \n      \n      Unnamed: 0\n      N.\n      Data e ora presentazione domanda\n      Spese Ammesse (€)\n      Contributo Concesso (€)\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#boxplot-contributi-concessi",
    "href": "posts/2401_Colonnine/Colonnine.html#boxplot-contributi-concessi",
    "title": "Bonus colonnine domestiche",
    "section": "1.2 Boxplot contributi concessi",
    "text": "1.2 Boxplot contributi concessi\n\n# Rimuovi eventuali simboli di valuta e converti in numerico\ncombined_df['Contributo Concesso (€)'] = combined_df['Contributo Concesso (€)'].replace('[€,]', '', regex=True).astype(float)\n\n# Rimuovi eventuali valori NaN\ncombined_df_clean = combined_df.dropna(subset=['Contributo Concesso (€)'])\n\n# Genera il boxplot\nplt.figure(figsize=(10, 6))\ncombined_df_clean['Contributo Concesso (€)'].plot(kind='box')\nplt.title('Boxplot dei Contributi Concessi (€)', fontsize=14)\nplt.ylabel('Contributi Concessi (€)', fontsize=12)\nplt.grid(axis='y', linestyle='--', alpha=0.7)\nplt.show()"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#histplot",
    "href": "posts/2401_Colonnine/Colonnine.html#histplot",
    "title": "Bonus colonnine domestiche",
    "section": "1.3 Histplot",
    "text": "1.3 Histplot\n\n# Funzione per generare il grafico e calcolare i dati dinamicamente\ndef plot_histogram_with_bins(data, column, bins=30):\n    # Rimuovi eventuali simboli di valuta e converti in numerico\n    data[column] = data[column].replace('[€,]', '', regex=True).astype(float)\n    data_clean = data.dropna(subset=[column])\n    \n    # Calcola l'istogramma con il numero di bin specificato\n    counts, bin_edges = np.histogram(data_clean[column], bins=bins)\n    \n    # Trova il bin con il conteggio maggiore\n    max_bin_index = counts.argmax()\n    max_bin_range = (bin_edges[max_bin_index], bin_edges[max_bin_index + 1])\n    max_bin_center = (max_bin_range[0] + max_bin_range[1]) / 2\n    \n    # Stampa i risultati\n    print(f\"Numero di bin: {bins}\")\n    print(f\"Il bin con il conteggio massimo è tra {max_bin_range[0]:,.2f} e {max_bin_range[1]:,.2f}.\")\n    print(f\"Il valore centrale di questo bin è: {max_bin_center:,.2f}.\")\n    print(f\"Il conteggio massimo è di {counts[max_bin_index]}.\")\n    \n    # Genera l'istogramma\n    plt.figure(figsize=(10, 6))\n    sns.histplot(data=data_clean, x=column, kde=True, bins=bins)\n    plt.title(f'Distribuzione di {column} - {bins} Bin', fontsize=14)\n    plt.xlabel(column, fontsize=12)\n    plt.ylabel('Frequenza', fontsize=12)\n    plt.grid(axis='y', linestyle='--', alpha=0.7)\n    \n    # Evidenzia il bin con il conteggio maggiore\n    plt.axvspan(max_bin_range[0], max_bin_range[1], color='orange', alpha=0.3, label='Bin con conteggio massimo')\n    plt.axvline(max_bin_center, color='red', linestyle='--', label=f'Valore centrale: {max_bin_center:,.2f}')\n    plt.legend()\n    plt.show()\n\n# Esempio di utilizzo\nplot_histogram_with_bins(combined_df, 'Contributo Concesso (€)', bins=50)\n\nNumero di bin: 50\nIl bin con il conteggio massimo è tra 1,360.64 e 1,518.72.\nIl valore centrale di questo bin è: 1,439.68.\nIl conteggio massimo è di 5563."
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#merge-con-opencup-localizzazione",
    "href": "posts/2401_Colonnine/Colonnine.html#merge-con-opencup-localizzazione",
    "title": "Bonus colonnine domestiche",
    "section": "1.4 merge con Opencup localizzazione",
    "text": "1.4 merge con Opencup localizzazione\n\nimport os\nos.chdir('D:/duckdb/files/Opencup')\nimport duckdb\nconn = duckdb.connect()\n\n\nconn.execute(\"CREATE TABLE OpenCup_Localizzazione AS SELECT * FROM 'OpenCup_Localizzazione.parquet';\")\n\nconn.register('df2', combined_df)\n\nquery = \"\"\"SELECT a.*, b.* FROM  df2 a LEFT JOIN OpenCup_Localizzazione b ON a.CUP = b.CUP ;\"\"\"\nresult2 = conn.execute(query).df()\n\nresult2 = result2[['CUP', 'CODICE_REGIONE','REGIONE','SIGLA_PROVINCIA',  'COMUNE', 'N.',\n       'ID Domanda', 'Data e ora presentazione domanda',\n       'Soggetto richiedente', 'Codice fiscale', 'Spese Ammesse (€)',\n       'Contributo Concesso (€)']]\n\nresult2.head()\n\n\n\n    \n      \n      CUP\n      CODICE_REGIONE\n      REGIONE\n      SIGLA_PROVINCIA\n      COMUNE\n      N.\n      ID Domanda\n      Data e ora presentazione domanda\n      Soggetto richiedente\n      Codice fiscale\n      Spese Ammesse (€)\n      Contributo Concesso (€)\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n1.4.1 per regione\n\nresult2['REGIONE'].count()\n\nnp.int64(17946)\n\n\n\nresult2_grouped = result2.groupby(['REGIONE', 'CODICE_REGIONE']).size().reset_index(name='COUNT') # Raggruppa per REGIONE e seleziona CODICE_REGIONE\nresult2_grouped_sorted = result2_grouped.sort_values(by='CODICE_REGIONE', ascending=True) # Ordina per CODICE_REGIONE (non per COUNT)\nprint(result2_grouped_sorted[['REGIONE','COUNT']]) # Mostra il risultato\n\n                  REGIONE  COUNT\n11               PIEMONTE   1260\n18          VALLE D'AOSTA     77\n8               LOMBARDIA   4868\n16    TRENTINO-ALTO ADIGE    534\n19                 VENETO   2338\n5   FRIULI-VENEZIA GIULIA    696\n7                 LIGURIA    221\n4          EMILIA-ROMAGNA   1777\n15                TOSCANA    872\n17                 UMBRIA    230\n9                  MARCHE    492\n6                   LAZIO   1900\n0                 ABRUZZO    277\n10                 MOLISE     47\n3                CAMPANIA    618\n12                 PUGLIA    595\n1              BASILICATA     87\n2                CALABRIA    202\n14                SICILIA    581\n13               SARDEGNA    274\n\n\n\n# Raggruppa i dati per COMUNE e conta le occorrenze\ncomuni_count = result2.groupby('COMUNE').size()\n\n# Calcola le frequenze: quanti comuni hanno lo stesso numero di occorrenze\nfrequenza_comuni = comuni_count.value_counts().sort_index()\n\n# Converte in DataFrame\nfrequenza_comuni_df = frequenza_comuni.reset_index()\nfrequenza_comuni_df.columns = ['Occorrenze', 'Numero di Comuni']\n\n# Raggruppa per intervalli di occorrenze (opzionale, per esempio in gruppi di 10)\nfrequenza_comuni_df['Intervalli'] = pd.cut(frequenza_comuni_df['Occorrenze'], bins=range(0, frequenza_comuni_df['Occorrenze'].max() + 10, 10), right=False)\n\n# Raggruppa per intervalli (se applicabile)\nraggruppati = frequenza_comuni_df.groupby('Intervalli')['Numero di Comuni'].sum().reset_index()\n\n# Mostra il risultato\nraggruppati\n\nC:\\Users\\paolo\\AppData\\Local\\Temp\\ipykernel_25820\\338649489.py:15: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  raggruppati = frequenza_comuni_df.groupby('Intervalli')['Numero di Comuni'].sum().reset_index()\n\n\n\n\n    \n      \n      Intervalli\n      Numero di Comuni\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\nimport pandas as pd\n\n# Raggruppa i dati per COMUNE e conta le occorrenze\ncomuni_count = result2.groupby('COMUNE').size()\n\n# Calcola le frequenze: quanti comuni hanno lo stesso numero di occorrenze\nfrequenza_comuni = comuni_count.value_counts().sort_index()\n\n# Converte in DataFrame\nfrequenza_comuni_df = frequenza_comuni.reset_index()\nfrequenza_comuni_df.columns = ['Occorrenze', 'Numero di Comuni']\n\n# Raggruppa per intervalli di occorrenze\nfrequenza_comuni_df['Intervalli'] = pd.cut(frequenza_comuni_df['Occorrenze'], \n                                           bins=range(0, frequenza_comuni_df['Occorrenze'].max() + 10, 10), \n                                           right=False)\n\n# raggruppati = frequenza_comuni_df.groupby('Intervalli')['Numero di Comuni'].sum().reset_index()\n# raggruppati = raggruppati[raggruppati['Numero di Comuni'] &gt; 0]\n\n\nraggruppati = frequenza_comuni_df.groupby('Intervalli', observed=True)['Numero di Comuni'].sum().reset_index()\nprint(raggruppati)\n\n      Intervalli  Numero di Comuni\n0        [0, 10)              3477\n1       [10, 20)               232\n2       [20, 30)                60\n3       [30, 40)                16\n4       [40, 50)                 9\n5       [50, 60)                 6\n6       [60, 70)                 2\n7       [70, 80)                 3\n8       [80, 90)                 1\n9      [90, 100)                 1\n10    [100, 110)                 4\n11    [110, 120)                 2\n12    [120, 130)                 1\n13    [650, 660)                 1\n14  [1070, 1080)                 1\n\n\n\nimport matplotlib.pyplot as plt\n\n# Crea il grafico a barre\nplt.figure(figsize=(10, 6))\nplt.bar(raggruppati['Intervalli'].astype(str), raggruppati['Numero di Comuni'])\n\n# Personalizza il grafico\nplt.title('Distribuzione dei Comuni per Intervalli di Occorrenze', fontsize=16)\nplt.xlabel('Intervalli di Occorrenze', fontsize=12)\nplt.ylabel('Numero di Comuni', fontsize=12)\nplt.xticks(rotation=45, ha='right')  # Ruota le etichette sull'asse x per leggibilità\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Mostra il grafico\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n# Raggruppa i dati per COMUNE e conta le occorrenze\ncomuni_count = result2.groupby('COMUNE').size()\n\n# Filtra i comuni con un numero di occorrenze inferiore o uguale a 10\ncomuni_max_10 = comuni_count[comuni_count &gt;= 400].index.unique()\n\n# Mostra i comuni unici\nprint(comuni_max_10)\n\nIndex(['MILANO', 'ROMA'], dtype='object', name='COMUNE')\n\n\n\n# Calcola il numero di occorrenze per ogni comune\ncomuni_count = result2.groupby('COMUNE').size().reset_index()\ncomuni_count.columns = ['COMUNE', 'Occorrenze']\n\n# Aggiungi una colonna per gli intervalli\ncomuni_count['Intervalli'] = pd.cut(comuni_count['Occorrenze'], \n                                    bins=range(0, comuni_count['Occorrenze'].max() + 10, 10), \n                                    right=False)\n\n# Raggruppa i comuni per intervalli\ncomuni_per_intervallo = comuni_count.groupby('Intervalli')['COMUNE'].unique().reset_index()\n\n# Mostra il risultato\nprint(comuni_per_intervallo)\n\n       Intervalli                                             COMUNE\n0         [0, 10)  [ABBADIA LARIANA, ACATE, ACERRA, ACI BONACCORS...\n1        [10, 20)  [ABANO TERME, ABBIATEGRASSO, AGRIGENTO, ALBA, ...\n2        [20, 30)  [AGEROLA, ALBIGNASEGO, ALESSANDRIA, ANZIO, ARE...\n3        [30, 40)  [ANCONA, CARPI, FIUMICINO, GUIDONIA MONTECELIO...\n4        [40, 50)  [BARI, BUSTO ARSIZIO, CAGLIARI, CESENA, FORLI'...\n..            ...                                                ...\n103  [1030, 1040)                                                 []\n104  [1040, 1050)                                                 []\n105  [1050, 1060)                                                 []\n106  [1060, 1070)                                                 []\n107  [1070, 1080)                                             [ROMA]\n\n[108 rows x 2 columns]\n\n\nC:\\Users\\paolo\\AppData\\Local\\Temp\\ipykernel_25820\\1272126017.py:11: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  comuni_per_intervallo = comuni_count.groupby('Intervalli')['COMUNE'].unique().reset_index()\n\n\n\n# Calcola il numero di occorrenze per ogni comune\ncomuni_count = result2.groupby('COMUNE').size().reset_index()\ncomuni_count.columns = ['COMUNE', 'Occorrenze']\n\n# Aggiungi una colonna per gli intervalli\ncomuni_count['Intervalli'] = pd.cut(comuni_count['Occorrenze'], \n                                    bins=range(0, comuni_count['Occorrenze'].max() + 10, 10), \n                                    right=False)\n\n# Raggruppa i comuni per intervalli, escludendo i raggruppamenti con valore 0\ncomuni_per_intervallo = comuni_count.groupby('Intervalli').filter(lambda x: x['Occorrenze'].sum() &gt; 0)\n\n# Raggruppa nuovamente per intervalli e ottieni i comuni unici\ncomuni_per_intervallo = comuni_per_intervallo.groupby('Intervalli')['COMUNE'].unique().reset_index()\n\n# Mostra il risultato\n(comuni_per_intervallo)\n\nC:\\Users\\paolo\\AppData\\Local\\Temp\\ipykernel_25820\\1766664538.py:11: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  comuni_per_intervallo = comuni_count.groupby('Intervalli').filter(lambda x: x['Occorrenze'].sum() &gt; 0)\nC:\\Users\\paolo\\AppData\\Local\\Temp\\ipykernel_25820\\1766664538.py:14: FutureWarning: The default of observed=False is deprecated and will be changed to True in a future version of pandas. Pass observed=False to retain current behavior or observed=True to adopt the future default and silence this warning.\n  comuni_per_intervallo = comuni_per_intervallo.groupby('Intervalli')['COMUNE'].unique().reset_index()\n\n\n\n\n    \n      \n      Intervalli\n      COMUNE\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n# Importa le librerie necessarie\nimport pandas as pd\n\n# Calcola il numero di occorrenze per ogni comune\ncomuni_count = result2.groupby('COMUNE').size().reset_index()\ncomuni_count.columns = ['COMUNE', 'Occorrenze']\n\n# Aggiungi una colonna per gli intervalli\ncomuni_count['Intervalli'] = pd.cut(comuni_count['Occorrenze'], \n                                    bins=range(0, comuni_count['Occorrenze'].max() + 10, 10), \n                                    right=False)\n\n# Raggruppa per intervalli e ottieni i comuni unici\ncomuni_per_intervallo = comuni_count.groupby('Intervalli', observed=False)['COMUNE'].unique().reset_index()\n\n# Filtra per rimuovere intervalli con liste vuote\ncomuni_per_intervallo = comuni_per_intervallo[comuni_per_intervallo['COMUNE'].str.len() &gt; 0]\n\n# Mostra il risultato\n(comuni_per_intervallo)\n\n\n\n    \n      \n      Intervalli\n      COMUNE\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#mappa-italia",
    "href": "posts/2401_Colonnine/Colonnine.html#mappa-italia",
    "title": "Bonus colonnine domestiche",
    "section": "1.5 mappa Italia",
    "text": "1.5 mappa Italia\n\nimport geopandas as gpd\n\n\ncomuni = result2.groupby('COMUNE')['COMUNE'].count().reset_index(name='count')\ndf1 = gpd.read_file('D:/files/csv/Shapefile/Limiti01012023_g/Com01012023_g/Com01012023_g_WGS84.shp')\ndf1['COMUNE'] = df1['COMUNE'].str.upper()\nmerged_gdf = df1.merge(comuni, left_on='COMUNE', right_on='COMUNE', how='inner')\n# merged_gdf.to_csv('D:\\\\files\\\\csv\\\\Colonnine_elettriche\\\\merged.csv', sep='|', index = False)\n\n\nax = merged_gdf.plot(\n    column='count',  # Usa la colonna 'count' per definire i colori\n    cmap='tab10',  # Scegli una mappa di colori\n    figsize=(12, 12),  # Imposta la dimensione\n    legend=False  # Mostra la legenda\n)\nax.axis('off')\nplt.savefig(f\"D:/Italia.png\", dpi=300, bbox_inches='tight', pad_inches=0.1)\nplt.show()\n\n\n\n\n\n\n\n\n\ncomuni = result2.groupby('COMUNE')['COMUNE'].count().reset_index(name='count')\ndf1 = gpd.read_file('D:/files/csv/Shapefile/Limiti01012023_g/Com01012023_g/Com01012023_g_WGS84.shp')\ndf1['COMUNE'] = df1['COMUNE'].str.upper()\nmerged_gdf = df1.merge(comuni, left_on='COMUNE', right_on='COMUNE', how='left')"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#singole-regioni",
    "href": "posts/2401_Colonnine/Colonnine.html#singole-regioni",
    "title": "Bonus colonnine domestiche",
    "section": "1.6 singole regioni",
    "text": "1.6 singole regioni\n\nfor i in range(1, 21):\n    # Filtra temporaneamente il DataFrame per ogni valore di COD_REG\n    temp_gdf = merged_gdf.query('COD_REG == @i')\n    \n    # Crea una nuova figura per ogni grafico\n    fig, ax = plt.subplots(figsize=(10, 10))\n    \n    # Traccia il confine (opzionale, usa temp_gdf o merged_gdf per i bordi)\n    temp_gdf.plot(ax=ax, color='black', linewidth=5)\n    \n    # Traccia la mappa colorata in base alla colonna 'count'\n    temp_gdf.plot(column='count', cmap='Reds', ax=ax, legend=False, missing_kwds={\n            \"color\": \"white\",  # Colore per i NaN\n            \"edgecolor\": \"black\",  # Contorno nero\n            \"linewidth\": 1\n        })\n    \n    # Aggiungi titolo e dettagli\n    ax.set_title(f\"Regione COD_REG = {i}\", fontsize=16)\n    ax.axis('off')  # Mantieni gli assi visibili (è già il comportamento predefinito)\n    \n    # Mostra la figura\n    plt.show()"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#in-azzurro-con-legenda-range",
    "href": "posts/2401_Colonnine/Colonnine.html#in-azzurro-con-legenda-range",
    "title": "Bonus colonnine domestiche",
    "section": "1.7 in azzurro con legenda range",
    "text": "1.7 in azzurro con legenda range\n\nimport matplotlib.pyplot as plt\n\nfor i in range(1, 21):\n    # Filtra temporaneamente il DataFrame per ogni valore di COD_REG\n    temp_gdf = merged_gdf.query('COD_REG == @i')\n    \n    # Crea una nuova figura per ogni grafico\n    fig, ax = plt.subplots(figsize=(10, 10))\n    \n    # Traccia la mappa colorata in base alla colonna 'count'\n    temp_gdf.plot(\n        column='count',\n        cmap='Blues',\n        ax=ax,\n        legend=True,\n        edgecolor=\"grey\",  # Colore del contorno\n        linewidth=1,  # Spessore del contorno\n        missing_kwds={\n            \"color\": \"white\",  # Colore per i NaN\n            \"edgecolor\": \"grey\",  # Contorno nero per i NaN\n            \"linewidth\": 0.5  # Spessore coerente anche per i NaN\n        }\n    )\n    \n    # Aggiungi titolo e dettagli\n    ax.set_title(f\"Regione COD_REG = {i}\", fontsize=16)\n    ax.axis('off')  # Rimuovi assi per un aspetto più pulito\n    \n    # Mostra la figura\n    plt.show()"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#comuni-presenti-in-verde-o-assenti",
    "href": "posts/2401_Colonnine/Colonnine.html#comuni-presenti-in-verde-o-assenti",
    "title": "Bonus colonnine domestiche",
    "section": "1.8 comuni presenti (in verde) o assenti",
    "text": "1.8 comuni presenti (in verde) o assenti\n\ncomuni = result2.groupby('COMUNE')['COMUNE'].count().reset_index(name='count')\ndf1 = gpd.read_file('D:/files/csv/Shapefile/Limiti01012023_g/Com01012023_g/Com01012023_g_WGS84.shp')\ndf1['COMUNE'] = df1['COMUNE'].str.upper()\nmerged_gdf = df1.merge(comuni, left_on='COMUNE', right_on='COMUNE', how='left')\n# merged_gdf.to_csv('D:\\\\files\\\\csv\\\\20241212_Colonnine elettriche\\\\merged.csv', sep='|', index = False)\n\nfor i in range(1, 21):\n    # Filtra temporaneamente il DataFrame per ogni valore di COD_REG\n    temp_gdf = merged_gdf.query('COD_REG == @i')\n    \n    # Crea una nuova figura per ogni grafico\n    fig, ax = plt.subplots(figsize=(10, 10))\n    \n    # Poligoni con valori NaN (bianco con contorno nero)\n    temp_gdf[temp_gdf['count'].isna()].plot(\n        ax=ax,\n        color='white',       # Colore interno bianco\n        edgecolor='black',   # Contorno nero\n        linewidth=1          # Spessore contorno uniforme\n    )\n    \n    # Poligoni con valori validi (verde con contorno nero)\n    temp_gdf[temp_gdf['count'].notna()].plot(\n        ax=ax,\n        color='green',       # Colore interno verde\n        edgecolor='black',   # Contorno nero\n        linewidth=1          # Spessore contorno uniforme\n    )\n    \n    # Aggiungi titolo e dettagli\n    ax.set_title(f\"Regione COD_REG = {i}\", fontsize=16)\n    ax.axis('off')  # Rimuovi gli assi per un aspetto più pulito\n    \n    # Salva l'immagine con il nome del valore COD_REG\n    # plt.savefig(f\"D:/cod_reg_{i}.png\", dpi=300, bbox_inches='tight')\n    \n    # Chiudi la figura per liberare memoria\n    # plt.close(fig)\n    plt.show()"
  },
  {
    "objectID": "posts/2401_Colonnine/Colonnine.html#inquiry",
    "href": "posts/2401_Colonnine/Colonnine.html#inquiry",
    "title": "Bonus colonnine domestiche",
    "section": "1.9 Inquiry",
    "text": "1.9 Inquiry\n\nfrom itables import init_notebook_mode\ninit_notebook_mode(all_interactive=True)\nfrom itables import show\n\nshow(\n    result2[['CUP', 'REGIONE', 'SIGLA_PROVINCIA', 'COMUNE','Data e ora presentazione domanda', 'Spese Ammesse (€)', 'Contributo Concesso (€)']],\n    layout={\"top1\": \"searchPanes\"},\n    searchPanes={\"layout\": \"columns-3\", \"cascadePanes\": True, \"columns\": [1,2]},\n)\n\n\n# result2.query('SIGLA_PROVINCIA==\"ME\"').sort_values(by='Data e ora presentazione domanda')\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nThis is the init_notebook_mode cell from ITables v2.2.4\n(you should not see this message - is your notebook trusted?)\n\n\n\n\n\n\n    \n      \n      CUP\n      REGIONE\n      SIGLA_PROVINCIA\n      COMUNE\n      Data e ora presentazione domanda\n      Spese Ammesse (€)\n      Contributo Concesso (€)\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)"
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#definizione-e-processo-di-riciclaggio",
    "href": "posts/2507_Rischio/Rischio.html#definizione-e-processo-di-riciclaggio",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Definizione e Processo di Riciclaggio:",
    "text": "Definizione e Processo di Riciclaggio:\n\nIl riciclaggio è definito come il processo attraverso cui la ricchezza di provenienza illecita viene occultata, trasferita per dissimularne l’origine e successivamente reinvestita nell’economia legale.\nLe azioni di contrasto al riciclaggio mirano a limitare gli effetti distorsivi sulla concorrenza, la crescita economica e il benessere dei cittadini.\nIl processo tipico di riciclaggio si articola in tre fasi: collocamento (placement), stratificazione (layering) e integrazione.\n\nIl collocamento è la fase in cui il denaro sporco entra nel sistema finanziario, spesso attraverso intermediari regolamentati.\nLa stratificazione è la fase in cui il denaro viene trasferito attraverso una serie complessa di transazioni per offuscarne l’origine.\nL’integrazione è la fase in cui il denaro riciclato viene reimmesso nell’economia legale."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#dimensioni-del-riciclaggio",
    "href": "posts/2507_Rischio/Rischio.html#dimensioni-del-riciclaggio",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Dimensioni del Riciclaggio:",
    "text": "Dimensioni del Riciclaggio:\n\nLe stime globali del riciclaggio variano, ma si attestano tra il 2 e il 5% del PIL mondiale.\nIn Italia, le stime variano dall’1% fino al 12% del PIL.\nLa dimensione del riciclaggio è difficile da stimare a causa della sua natura occulta e delle varie tecniche utilizzate per mascherare l’origine illecita dei proventi."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#tecniche-di-riciclaggio",
    "href": "posts/2507_Rischio/Rischio.html#tecniche-di-riciclaggio",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Tecniche di Riciclaggio:",
    "text": "Tecniche di Riciclaggio:\n\nLe tecniche di riciclaggio sono in continua evoluzione.\nIl contante, a causa della sua facile utilizzabilità e non tracciabilità, è uno strumento spesso funzionale al riciclaggio.\nI riciclatori sfruttano la natura anonima delle criptoattività e le maggiori possibilità che offrono nella fase di stratificazione.\nStrumenti come i mixer (o tumbler) vengono utilizzati per mescolare criptoattività e offuscarne la provenienza.\nIl “chain peeling” è una tecnica che frammenta grandi quantità di criptovalute in piccole transazioni.\nL’uso di identità fittizie, prestanome e società di comodo sono tecniche comuni per nascondere i titolari effettivi di rapporti e transazioni."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#settori-a-rischio",
    "href": "posts/2507_Rischio/Rischio.html#settori-a-rischio",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Settori a Rischio:",
    "text": "Settori a Rischio:\n\nIl settore del commercio è considerato un ambito in cui si riscontra la maggior presenza di imprese “cartiere” utilizzate per riciclare denaro.\nIl settore delle costruzioni è tradizionalmente considerato profittevole per le organizzazioni criminali, che sfruttano lavoro irregolare e aggirano i vincoli normativi.\nAnche il settore del gioco è considerato vulnerabile, con punti gioco che non eseguono correttamente l’adeguata verifica dei giocatori.\nLe operazioni in oro sono soggette a dichiarazione alla UIF per importi pari o superiori a 12.500 euro, poiché questo settore può essere usato per finalità di riciclaggio.\nIl settore delle carte di pagamento è idoneo ad essere analizzato tramite l’analisi di rete, data l’elevata frammentazione delle operazioni.\nI finanziamenti a tasso agevolato nell’ambito del PNRR sono un’area di rischio, a causa di anomalie nelle richieste e dell’inadeguatezza economico-patrimoniale dei richiedenti.\nLe cessioni di crediti d’imposta sono state identificate come un’area di rischio, con la circolazione di crediti fittizi e l’infiltrazione della criminalità organizzata.\nAnche i rimborsi IRPEF possono essere oggetto di schemi fraudolenti, con soggetti a basso reddito che dichiarano ritenute maggiori per ottenere rimborsi.\nLe operazioni con il reddito di cittadinanza possono essere utilizzate per la monetizzazione del beneficio, aggirando i limiti al prelievo di contante.\nLe piattaforme estere online possono essere utilizzate per speculazioni o truffe nella vendita di dispositivi medici e sanitari."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#ruolo-delle-autorità",
    "href": "posts/2507_Rischio/Rischio.html#ruolo-delle-autorità",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Ruolo delle Autorità:",
    "text": "Ruolo delle Autorità:\n\nL’Unità di Informazione Finanziaria (UIF) svolge un ruolo centrale nel monitoraggio e nell’analisi delle segnalazioni di operazioni sospette (SOS).\nLa UIF collabora con gli organi investigativi per lo scambio di informazioni e la trasmissione di approfondimenti.\nLa UIF conduce analisi operative di rischio, come “Austrian connection”, basata sulla valutazione di elementi informativi pervenuti dalla Banca d’Italia.\nIl Nucleo Speciale Polizia Valutaria della Guardia di Finanza è coinvolto in indagini e attività di polizia giudiziaria relative al riciclaggio.\nLa Banca d’Italia svolge attività di vigilanza sugli intermediari finanziari per prevenire il riciclaggio.\nLa Direzione Investigativa Antimafia (DIA) svolge indagini sulle segnalazioni connesse alla criminalità organizzata.\nIl GAFI (Gruppo di Azione Finanziaria Internazionale) identifica i paesi ad alto rischio e/o con legislazione antiriciclaggio carente."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#riciclaggio-e-criptoattività",
    "href": "posts/2507_Rischio/Rischio.html#riciclaggio-e-criptoattività",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Riciclaggio e Criptoattività:",
    "text": "Riciclaggio e Criptoattività:\n\nLe criptoattività offrono nuove opportunità per il riciclaggio, grazie alla loro natura pseudonima e alle possibilità di stratificazione.\nIl riciclaggio tramite criptoattività può avvenire sia attraverso la conversione di denaro fiat sporco in cripto, sia attraverso condotte illegali direttamente in cripto.\nLa finanza decentralizzata (DeFi) pone sfide significative per l’applicazione delle normative antiriciclaggio, a causa dell’assenza di intermediari.\nLe piattaforme di scambio di criptovalute che operano senza adeguati controlli di verifica rappresentano un rischio.\nI mixer e i tumbler sono strumenti utilizzati per oscurare le transazioni in criptovalute."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#dati-e-analisi",
    "href": "posts/2507_Rischio/Rischio.html#dati-e-analisi",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Dati e Analisi:",
    "text": "Dati e Analisi:\n\nLe segnalazioni di operazioni sospette sono un’importante fonte di dati per l’analisi del riciclaggio.\nL’analisi della qualità delle segnalazioni è cruciale per individuare i fenomeni più rilevanti.\nLa UIF conduce analisi sui flussi finanziari con l’estero, identificando anomalie per paese o settore."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#infiltrazione-della-criminalità-organizzata",
    "href": "posts/2507_Rischio/Rischio.html#infiltrazione-della-criminalità-organizzata",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Infiltrazione della Criminalità Organizzata:",
    "text": "Infiltrazione della Criminalità Organizzata:\n\nLe organizzazioni criminali (OC) infiltrano l’economia legale per riciclare denaro, perseguire ulteriori fonti di profitto e ricercare consenso sociale.\nLe imprese create dalle OC possono essere utilizzate per attività criminali, per ottenere vantaggi competitivi, o per creare connessioni politiche."
  },
  {
    "objectID": "posts/2507_Rischio/Rischio.html#misure-di-contrasto",
    "href": "posts/2507_Rischio/Rischio.html#misure-di-contrasto",
    "title": "Il rischio nei finanziamenti e nelle agevolazioni",
    "section": "Misure di Contrasto:",
    "text": "Misure di Contrasto:\n\nLe normative antiriciclaggio vengono continuamente aggiornate per includere le attività suscettibili di essere utilizzate per il riciclaggio.\nLa collaborazione tra le FIU è essenziale per lo scambio di informazioni e il contrasto del riciclaggio a livello internazionale.\nL’adeguata verifica della clientela è un obbligo fondamentale per tutti i soggetti coinvolti nel sistema finanziario.\nL’uso di tecnologie come gli smart contract può essere utile per intercettare le operazioni anomale nella finanza decentralizzata."
  },
  {
    "objectID": "posts/2506_Github/PubblicareSuGithub.html",
    "href": "posts/2506_Github/PubblicareSuGithub.html",
    "title": "Come Pubblicare su un sito Github",
    "section": "",
    "text": "Premessa: un immenso grazie a Chatgpt\nsi lavora con molti tipi di files: yaml, qmd, css, …\ndevono essere precedentemente configurati :\nun esempio impattante:"
  },
  {
    "objectID": "posts/2506_Github/PubblicareSuGithub.html#i-comandi-basilari",
    "href": "posts/2506_Github/PubblicareSuGithub.html#i-comandi-basilari",
    "title": "Come Pubblicare su un sito Github",
    "section": "I comandi basilari",
    "text": "I comandi basilari\nNon è necessario specificare manualmente il file .qmd in tutti i comandi, ma devi farlo nei comandi quarto render o quarto preview. Gli altri comandi possono lavorare con un approccio più generico, come git add ., per includere tutte le modifiche.\n\nquarto preview d:/paolovolterra.github.io/posts/202508_RNA/RNA.qmd\nquarto render d:/paolovolterra.github.io/posts/202508_RNA/RNA.qmd\ngit add d:/paolovolterra.github.io/docs/posts/202508_RNA/RNA.html\ngit add . (se hai rilevato altre modifiche e le voi introitare)\ngit status\ngit commit -m “Aggiornata la pagina: RNA”\ngit pull origin main –rebase\ngit push origin main\ngit log\n\n\nFlusso di lavoro ottimizzato\nSe modifichi un solo file .qmd (ad esempio, RNA.qmd), puoi seguire questo flusso semplificato:\nquarto render d:/paolovolterra.github.io/posts/202508_RNA/RNA.qmd\ngit add d:/paolovolterra.github.io/docs/posts/202508_RNA/RNA.html\ngit commit -m \"Aggiornata la pagina: RNA\"\ngit pull origin main --rebase\ngit push origin main\n\nGenera l’output dal file modificato\nAggiungi i file modificati\nCrea il commit\nSincronizza con il repository remoto\n\n\n\nSe ci sono altri file modificati\n(es. posts.html, sitemap.xml), questi potrebbero essere stati rigenerati automaticamente da Quarto. Per gestire anche questi file:\ngit add .\ngit commit -m \"Aggiornati file generati automaticamente\"\ngit push origin main\nSe vuoi evitare di eseguire manualmente questi comandi per ogni file, puoi creare uno script Bash o Batch."
  },
  {
    "objectID": "posts/2506_Github/PubblicareSuGithub.html#riferimenti",
    "href": "posts/2506_Github/PubblicareSuGithub.html#riferimenti",
    "title": "Come Pubblicare su un sito Github",
    "section": "Riferimenti",
    "text": "Riferimenti\n\nIl mio primo blog postcon Quarto [[Il mio primo blog post – aborruso’s website]]\nCreating your personal website using Quarto con Quarto [[Creating your personal website using Quarto]]\nCreating a Website (dal sito ufficiale)\nCreating a Blog (dal sito ufficiale)\nMEDS Computing Requirements & Software Installation Guide con RStudio"
  },
  {
    "objectID": "posts/2506_Github/PubblicareSuGithub.html#bibtex",
    "href": "posts/2506_Github/PubblicareSuGithub.html#bibtex",
    "title": "Come Pubblicare su un sito Github",
    "section": "Bibtex",
    "text": "Bibtex\nhttps://www.getbibtex.com/\n@misc{aborrusoPrimoBlog, author = {Andrea Borruso}, title = {{I}l mio primo blog post – aborruso’s website — aborruso.github.io}, howpublished = {}, year = {}, note = {[Accessed 11-01-2025]}, }\n@misc{marvinschmittCreateYour, author = {Marvin Schmitt}, title = {{C}reate {Y}our {W}ebsite with {Q}uarto: {C}omplete {T}utorial and {T}emplate — marvinschmitt.com}, howpublished = {}, year = {}, note = {[Accessed 11-01-2025]}, }\n@misc{adtariePersonalWebsite, author = {A.A. Wijaya}, title = {{P}ersonal {W}ebsite using {J}upyter {N}otebook and {Q}uarto – {F}oreland of {T}houghts — adtarie.net}, howpublished = {}, year = {}, note = {[Accessed 11-01-2025]}, }"
  },
  {
    "objectID": "posts/2503_MiniCds/MiniCds.html",
    "href": "posts/2503_MiniCds/MiniCds.html",
    "title": "Mini contratti di sviluppo",
    "section": "",
    "text": "cover\nIl mini contratto di sviluppo è l’incentivo che supporta gli investimenti per lo sviluppo o la produzione di tecnologie critiche negli ambiti individuati dal Regolamento europeo STEP: tecnologie digitali e deep tech, tecnologie pulite ed efficienti sotto il profilo delle risorse, biotecnologie.\nLo strumento punta anche a rafforzare o salvaguardare le rispettive catene del valore, per favorire la sicurezza degli approvvigionamenti, nonché la resilienza e la produttività del sistema.\nÈ promosso dal Ministero delle Imprese e del Made in Italy ed è gestito da Invitalia.\nIl mini contratto di sviluppo finanzia progetti tra 5 e 20 milioni di euro e si rivolge alle imprese di tutte le dimensioni nelle regioni Basilicata, Calabria, Campania, Molise, Puglia, Sardegna e Sicilia.\nLa dotazione è di 300 milioni di euro, messi a disposizione dal Programma nazionale ricerca, innovazione e competitività 2021–2027, ed è così distribuita:"
  },
  {
    "objectID": "posts/2503_MiniCds/MiniCds.html#le-agevolazioni",
    "href": "posts/2503_MiniCds/MiniCds.html#le-agevolazioni",
    "title": "Mini contratti di sviluppo",
    "section": "Le agevolazioni",
    "text": "Le agevolazioni\nLe agevolazioni sono concesse nella forma del contributo a fondo perduto, nei limiti delle intensità previste dalla Carta degli aiuti di Stato a finalità regionale.\nLe spese ammissibili vengono coperte con le seguenti percentuali:\n\npiccole imprese: 55%\nmedie imprese: 45%\nimprese di grandi dimensioni: 35%\n\nRelativamente alle sole Pmi: per le spese legate a consulenze funzionali alla realizzazione del piano di investimenti, le agevolazioni sono concesse nella misura del 50% delle spese ammissibili."
  },
  {
    "objectID": "posts/2503_MiniCds/MiniCds.html#come-funziona",
    "href": "posts/2503_MiniCds/MiniCds.html#come-funziona",
    "title": "Mini contratti di sviluppo",
    "section": "Come funziona",
    "text": "Come funziona\nA seguito della presentazione delle domande è prevista la formazione di una graduatoria per stabilire l’ordine di avvio all’istruttoria, basata su questi criteri di valutazione:\n\ngrado di indipendenza finanziaria\nincidenza della gestione caratteristica sul fatturato\nsostenibilità ambientale\ninnovatività\nimpatto occupazionale\n\nIl punteggio finale per ciascun criterio è calcolato tramite interpolazione lineare al fine di assegnare al valore più basso il valore 0 e a quello più alto il valore 1.\nIl punteggio complessivo ottenuto per ciascun criterio è determinato dalla somma dei valori attribuibili per ciascuno dei criteri, ponderata secondo i seguenti pesi: 15% per il criterio di cui alla lettera a), 15% per il criterio di cui alla lettera b), 20% per il criterio di cui alla lettera c), 20% per il criterio di cui alla lettera d) e 30% per il criterio di cui alla lettera e).\nIl punteggio complessivo può essere incrementato per le imprese in possesso di:\n\nrating di legalità (+5%)\nalmeno una certificazione ambientale (EMAS, ISO 140001, ISO 50001); in alternativa può essere prevista l’applicazione, nel piano di investimenti, di metodologie riconosciute di valutazione del ciclo di vita (es. LCA, LCC) o per il calcolo dell’impronta ambientale delle organizzazioni, dei processi o dei prodotti (+5%)\ncertificazione della parità di genere, se l’impresa ne è in possesso alla data del 31 dicembre dell’anno precedente a quello della presentazione della domanda di agevolazione (+5%)\n\nIn caso di parità di punteggio, è data preferenza alla domanda di agevolazione che prevede la minore richiesta di contributo in valore nominale. In caso di ulteriore parità di punteggio, è data preferenza alla domanda che ha conseguito il punteggio maggiore per il criterio di cui alla lettera a)."
  },
  {
    "objectID": "posts/2503_MiniCds/MiniCds.html#normativa",
    "href": "posts/2503_MiniCds/MiniCds.html#normativa",
    "title": "Mini contratti di sviluppo",
    "section": "Normativa",
    "text": "Normativa\n\nDecreto ministeriale 12 agosto 2024 - Nuovo Regime di aiuti. Mini contratti di sviluppo\nDecreto 12 agosto 2024\nDecreto direttoriale 20 dicembre 2024 –Mini Contratti di Sviluppo. Apertura sportello\nDecreto direttoriale 20 dicembre 2024"
  },
  {
    "objectID": "posts/2503_MiniCds/MiniCds.html#fonti",
    "href": "posts/2503_MiniCds/MiniCds.html#fonti",
    "title": "Mini contratti di sviluppo",
    "section": "Fonti",
    "text": "Fonti\n\nhttps://www.pnric.gov.it/opportunities/mini-contratti-di-sviluppo\nhttps://www.invitalia.it/cosa-facciamo/sosteniamo-grandi-investimenti/mini-contratto-di-sviluppo\nhttps://www.mimit.gov.it/it/normativa/decreti-ministeriali/decreto-ministeriale-12-agosto-2024-nuovo-regime-di-aiuti-mini-contratti-di-sviluppo\nhttps://www.mimit.gov.it/it/notizie-stampa/mimit-al-via-dal-5-febbraio-lo-sportello-per-accedere-ai-mini-contratti-di-sviluppo\nMini Contratti di Sviluppo 2025: domanda incentivi dal 5 febbraio"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Il mio Blog",
    "section": "",
    "text": "Il rischio nei finanziamenti e nelle agevolazioni\n\n\nanalisi delle ultime pubblicazioni ufficiali\n\n\n\nAI\n\n\nBanche\n\n\nRisk\n\n\nBankit\n\n\nLavoro\n\n\n\n\n\n\n\n\n\nJan 12, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nRegistro Nazionale degli Aiuti di Stato\n\n\ntrasparenza e controllo sugli aiuti pubblici concessi in conformità alla normativa europea sugli aiuti di Stato \n\n\n\nagevolazioni\n\n\nInvitalia\n\n\nPython\n\n\nRNA\n\n\nOpendata\n\n\n\n\n\n\n\n\n\nJan 12, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nCome Pubblicare su un sito Github\n\n\nmiei appunti presi da diverse fonti\n\n\n\nGithub\n\n\nQuarto\n\n\nPython\n\n\n\n\n\n\n\n\n\nJan 11, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nIl tech in banca\n\n\nCon l’IA sono a rischio tutti i lavori che comportano attività di routine e ripetitive. L’IA trasformerà il lavoro \n\n\n\nAI\n\n\nTech\n\n\nBanche\n\n\nBankit\n\n\nLavoro\n\n\n\n\n\n\n\n\n\nJan 10, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nFondo per il sostegno alla transizione industriale\n\n\nFTI\n\n\n\nInvitalia\n\n\nAgevolazioni\n\n\nImprese\n\n\nPNRR\n\n\n\n\n\n\n\n\n\nJan 9, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nBonus colonnine domestiche\n\n\nPython applicato a dati pubblicati online \n\n\n\nAgevolazioni\n\n\nPython\n\n\nOpendata\n\n\nMIMIT\n\n\n\n\n\n\n\n\n\nJan 9, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nMini contratti di sviluppo\n\n\nuna nuova opportunità per le pMI, mutuata dai più rilevanti Contratti di Sviluppo\n\n\n\nInvitalia\n\n\nCdS\n\n\nAgevolazioni\n\n\nImprese\n\n\n\n\n\n\n\n\n\nJan 8, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\n\n\n\n\n\n\nCodici fiscali, GDPR & Python\n\n\ncome anonimizzare un codice fiscale\n\n\n\nGDPR\n\n\nPython\n\n\nOpendata\n\n\n\n\n\n\n\n\n\nJan 3, 2025\n\n\nPaolo Volterra\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Impara l’arte e mettila da parte",
    "section": "",
    "text": "GitHub\n  \n  \n    \n     LinkedIn\nAnno nuovo, vita nuova\nCol 2025 riprendo a scrivere il mio blog, iniziato in R durante il covid\nMotivo?\nPrimo: gratitudine per tanti filantropi che gratuitamente hanno messo online nel tempo tante informazioni che mi hanno permesso di progredire\nSecondo: dove ti giri, gli esempi sono basati sugli stessi dati (Titanic, Boston, carte di credito, iris, cancer…). Voglio andare oltre il copia/incolla\nTerzo: gli esempi sono sempre basati su dati retail, mentre nessuno spiega usando dati imprese (più difficili da trovare, anche perchè vanno acquistati) Userò quindi gli #opendata\nQuarto: molte persono desistono dall’approfondire tecnicalities che richiedono tempo e voglia per essere trovate, capite e applicate Se penso a quanto tempo ho dedicato ad evolvere … ( e poi tutta questa mia conoscenza/esperienza andrà persa, prima o poi)\nQuinto: a forza di trattare dati ed informazioni, o ti dai un’organizzazione o vivi nel caos.\nMa il passaggio successivo all’organizzazione è la ricerca della perfezione. Troppe volte ho visto lavori fatti senza amore\nEmblematico: un piccolo xls formattato in tutte le celle. risultato? un file di 40Mb!"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html",
    "href": "posts/2501_CF/CfAnonimizzati.html",
    "title": "Codici fiscali, GDPR & Python",
    "section": "",
    "text": "cover"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#obiettivi-dello-studio",
    "href": "posts/2501_CF/CfAnonimizzati.html#obiettivi-dello-studio",
    "title": "Codici fiscali, GDPR & Python",
    "section": "1 obiettivi dello studio",
    "text": "1 obiettivi dello studio\n\nanonimizzazione di dati\ngestione di immagini in formato base64\n\n\nsi può trasformare il codice fiscale in una forma che non sia immediatamente identificabile da altri, ma decifrabile solo dal titolare (ad esempio, attraverso una chiave o un algoritmo noto…)\n\nCon la pseudonimizzazione a chiave privata, attraverso una di queste soluzioni\n\nHashing con Salt Privato\nCifratura Simmetrica\nSostituzione Parziale\nTokenizzazione\n\nsi può trasformare il codice fiscale in una forma che non è immediatamente identificabile da altri, ma che può essere decifrata dal titolare (ad esempio, attraverso una chiave o un algoritmo noto solo a lui)."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#hashing-con-salt-privato",
    "href": "posts/2501_CF/CfAnonimizzati.html#hashing-con-salt-privato",
    "title": "Codici fiscali, GDPR & Python",
    "section": "2 Hashing con Salt Privato",
    "text": "2 Hashing con Salt Privato\nL’hashing crea una stringa univoca dal codice fiscale utilizzando un algoritmo crittografico (es. SHA-256). Il salt privato (una stringa univoca aggiunta al dato originale) rende l’hash interpretabile solo dal titolare.\n\nProcedura:\n\nAggiungo un salt univoco noto solo al titolare (es. data di nascita o un valore condiviso).\nApplico l’algoritmo di hashing.\n\n\nimport hashlib\ndef anonimizza_cf(codice_fiscale, salt):        \n    dato = codice_fiscale + salt        \n    hash_object = hashlib.sha256(dato.encode())    \n    return hash_object.hexdigest()"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#esempio",
    "href": "posts/2501_CF/CfAnonimizzati.html#esempio",
    "title": "Codici fiscali, GDPR & Python",
    "section": "3 Esempio",
    "text": "3 Esempio\n\ncodice_fiscale = “RSSMRA80A01H501U”\nsalt = “01/01/1980” # Salt privato conosciuto dal titolare\nhash_cf = anonimizza_cf(codice_fiscale, salt)\nPro: Non è possibile risalire al codice fiscale senza il salt.\nContro: Il titolare deve conoscere o avere accesso al salt."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#cifratura-simmetrica",
    "href": "posts/2501_CF/CfAnonimizzati.html#cifratura-simmetrica",
    "title": "Codici fiscali, GDPR & Python",
    "section": "4 Cifratura Simmetrica",
    "text": "4 Cifratura Simmetrica\nLa cifratura simmetrica utilizza un algoritmo come AES per codificare il codice fiscale. Il titolare può decifrare il codice con una chiave segreta condivisa.\nProcedura:\n\nScelgo un algoritmo di cifratura (es. AES).\nUso una chiave segreta condivisa (es. una password).\nCripto il codice fiscale\nFornisco il dato criptato al titolare.\nPro: Garantisce riservatezza elevata; solo il titolare con la chiave può decifrare.\nContro: Il titolare deve conservare la chiave.\n\n\nfrom cryptography.fernet import Fernet\n\n# Genera una chiave\nkey = Fernet.generate_key()\n\n# Crea un oggetto Fernet con la chiave generata\ncipher = Fernet(key)\n\n# Codice fiscale da cifrare\ncodice_fiscale = \"RSSMRA80A01H501U\"\n\n# Cifra il codice fiscale\nencrypted_cf = cipher.encrypt(codice_fiscale.encode())\nprint(\"Codice cifrato:\", encrypted_cf)\n\n# Decifra il codice fiscale\ndecrypted_cf = cipher.decrypt(encrypted_cf).decode()\nprint(\"Codice decifrato:\", decrypted_cf)\n\nCodice cifrato: b'gAAAAABnh0sKKrqCjE_rtgr9w1qpEQw5A2aD40JdXeEm-oMLAAWbSJdE4p02m10GlaV0bZh7dPqqKZ1hW1N44MigVH1ImIdyeEZs4KUlpjA9h6K1DAACpgA='\nCodice decifrato: RSSMRA80A01H501U\n\n\nRisultato\nEseguendo il codice, otterrai l’output:\nCodice cifrato: una stringa cifrata in base64 (non leggibile direttamente).\nCodice decifrato: il valore originale del codice fiscale (RSSMRA80A01H501U).\nNote importanti:\nGestione della chiave: La chiave generata (key) deve essere conservata in modo sicuro se hai bisogno di decifrare i dati in futuro.\nSicurezza: Non condividere mai la chiave pubblicamente; è fondamentale per mantenere i dati al sicuro."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#sostituzione-parziale",
    "href": "posts/2501_CF/CfAnonimizzati.html#sostituzione-parziale",
    "title": "Codici fiscali, GDPR & Python",
    "section": "5 Sostituzione Parziale",
    "text": "5 Sostituzione Parziale\nSostituisco parte del codice fiscale con caratteri generici, mantenendo solo alcune informazioni identificative per il titolare.\nEsempio:\n\nCodice fiscale: RSSMRA80A01H501U\nAnonimizzato: RM80__**U\nInterpretazione: Mantieni iniziali e anno di nascita per rendere il codice interpretabile dal titolare.\nPro: Facile da implementare, leggibile dal titolare.\nContro: Non è completamente sicuro contro reidentificazione.\n\n\ndef anonimizza_cf_parziale(codice_fiscale):\n    \"\"\"\n    Funzione per anonimizzare parzialmente un codice fiscale.\n    Mantiene visibili solo i primi 3 caratteri, i caratteri 6 e 7, \n    e gli ultimi 4 caratteri.\n    \"\"\"\n    return f\"{codice_fiscale[:3]}***{codice_fiscale[6:8]}******{codice_fiscale[-4:]}\"\n\n# Codice fiscale da anonimizzare\ncodice_fiscale = \"RSSMRA80A01H501U\"\n\n# Anonimizzazione parziale\ncf_anonimizzato = anonimizza_cf_parziale(codice_fiscale)\nprint(\"Codice Fiscale Anonimizzato:\", cf_anonimizzato)\n\nCodice Fiscale Anonimizzato: RSS***80******501U\n\n\nSpiegazione:\ncodice_fiscale[:3]: Prende i primi 3 caratteri.\ncodice_fiscale[6:8]: Prende i caratteri dalla posizione 6 alla posizione 7 inclusa.\ncodice_fiscale[-4:]: Prende gli ultimi 4 caratteri.\nI caratteri mascherati sono sostituiti da *."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#tokenizzazione",
    "href": "posts/2501_CF/CfAnonimizzati.html#tokenizzazione",
    "title": "Codici fiscali, GDPR & Python",
    "section": "6 Tokenizzazione",
    "text": "6 Tokenizzazione\n\nSostituisco il codice fiscale con un identificatore univoco casuale (token). Solo il titolare o un sistema può ricondurre il token al codice originale.\nEsempio:\n\nCodice fiscale: RSSMRA80A01H501U\nToken: ABC12345XYZ\nTabella di mapping (conservata separatamente): ABC12345XYZ -&gt; RSSMRA80A01H501U\nPro: Nessun dato sensibile è esposto.\nContro: Richiede un sistema per mantenere il mapping.\n\n\nimport uuid\n\ndef anonimizza_cf_token(codice_fiscale):\n    \"\"\"\n    Funzione per anonimizzare un codice fiscale utilizzando un token UUID.\n    \"\"\"\n    # Genera un token unico (primi 8 caratteri di un UUID)\n    token = str(uuid.uuid4())[:8]\n    \n    # Crea un mapping tra il token e il codice fiscale\n    mapping = {token: codice_fiscale}\n    print(\"Mapping (da salvare):\", mapping)\n    \n    # Ritorna il token\n    return token\n\n# Codice fiscale da anonimizzare\ncodice_fiscale = \"RSSMRA80A01H501U\"\n\n# Anonimizzazione con token\ncf_anonimizzato = anonimizza_cf_token(codice_fiscale)\nprint(\"Codice Fiscale Anonimizzato:\", cf_anonimizzato)\n\nMapping (da salvare): {'70b8720b': 'RSSMRA80A01H501U'}\nCodice Fiscale Anonimizzato: 70b8720b\n\n\nDettagli:\nUUID Token: La funzione genera un identificatore unico (uuid.uuid4) e ne utilizza i primi 8 caratteri come token per rappresentare il codice fiscale.\nMapping: Salva il mapping tra il token e il codice fiscale originale. Questo mapping deve essere conservato in modo sicuro (es. database) per consentire una futura deanonimizzazione.\nRitorno: Il token viene restituito come codice anonimo.\nNota Importante\nIl mapping è temporaneo nel codice fornito. Per un'applicazione reale, è essenziale salvare il mapping in un archivio persistente (come un database o un file) per potervi accedere successivamente.\nSicurezza: Considera l'accesso controllato al mapping per prevenire abusi e garantire la privacy degli utenti."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#quale-tecnica-scegliere-per-pubblicare-un-elenco-di-codici-fiscali",
    "href": "posts/2501_CF/CfAnonimizzati.html#quale-tecnica-scegliere-per-pubblicare-un-elenco-di-codici-fiscali",
    "title": "Codici fiscali, GDPR & Python",
    "section": "7 Quale tecnica scegliere per pubblicare un elenco di codici fiscali??",
    "text": "7 Quale tecnica scegliere per pubblicare un elenco di codici fiscali??\nDipende dal contesto:\n\nPer alta sicurezza: Cifratura simmetrica o hashing con salt.\nPer facilità d’uso: Sostituzione parziale.\nPer sistemi centralizzati: Tokenizzazione.\n\n\nSe il codice fiscale deve essere stampato per il titolare (ad esempio in un report o un documento) occorre considerare contemporaneamente:\n\nl’interpretabilità per il titolare\nla riservatezza\n\nLa Sostituzione Parziale mantiene solo alcune parti identificative del codice fiscale, come le iniziali e un suffisso significativo. Questo metodo è semplice e leggibile (anche dagli altri, però).\nRSS80*__501U\nIl codice fiscale Anonimizzato con Hashing e Salt Privato utilizza l’hashing per creare un codice unico che il titolare può interpretare solo conoscendo il salt.\n\ncodice_fiscale = “RSSMRA80A01H501U”\nsalt = “01/01/1980” # Il salt può essere condiviso solo con il titolare\nCodice Fiscale Anonimizzato: 9F4E8D12\n\nLa Cifratura Simmetrica (Stampabile e Decifrabile Solo dal Titolare) produce un codice stampabile e leggibile, decifrabile solo con la chiave privata.\n\ncodice_fiscale = “RSSMRA80A01H501U”\nCodice Fiscale Anonimizzato: gAAAAABlcO9Z8H\nIl titolare può decifrare l’intero codice fiscale utilizzando la chiave segreta.\n\nLa Tokenizzazione genera un token casuale per anonimizzare il codice fiscale, con un mapping separato conservato nel sistema.\n\ncodice_fiscale = “RSSMRA80A01H501U”\ncf_anonimizzato = anonimizza_cf_token(codice_fiscale)\nprint(“Codice Fiscale Anonimizzato:”, cf_anonimizzato)\n\nOutput:\n\nMapping (da salvare): {‘1a2b3c4d’: ‘RSSMRA80A01H501U’}\nCodice Fiscale Anonimizzato: 1a2b3c4d"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#conclusione",
    "href": "posts/2501_CF/CfAnonimizzati.html#conclusione",
    "title": "Codici fiscali, GDPR & Python",
    "section": "8 Conclusione",
    "text": "8 Conclusione\n\nLeggibile direttamente dal titolare: sostituzione parziale o tokenizzazione.\nMaggiore sicurezza: hashing con salt o cifratura simmetrica."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#i-codici-fiscali-delle-imprese-sono-dati-sensibili",
    "href": "posts/2501_CF/CfAnonimizzati.html#i-codici-fiscali-delle-imprese-sono-dati-sensibili",
    "title": "Codici fiscali, GDPR & Python",
    "section": "9 i codici fiscali delle imprese sono dati sensibili?",
    "text": "9 i codici fiscali delle imprese sono dati sensibili?\nIl codice fiscale di un’impresa è considerato un dato personale, ma non rientra nella categoria dei dati sensibili.\nSecondo il Regolamento Generale sulla Protezione dei Dati (GDPR), i dati personali sono informazioni che identificano o rendono identificabile una persona fisica, come il nome, l’indirizzo o il codice fiscale.\nI dati sensibili, invece, includono informazioni che rivelano l’origine razziale o etnica, le opinioni politiche, le convinzioni religiose o filosofiche, l’appartenenza sindacale, dati genetici, dati biometrici, dati relativi alla salute o alla vita sessuale o all’orientamento sessuale di una persona (Commissione Europea)\nÈ importante notare che il codice fiscale di una ditta individuale, essendo associato a una persona giuridica, non è soggetto alle stesse tutele previste per i dati personali delle persone fisiche.\nTuttavia, l’utilizzo del codice fiscale deve avvenire nel rispetto delle normative vigenti in materia di protezione dei dati."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#come-è-composto-il-codice-fiscale",
    "href": "posts/2501_CF/CfAnonimizzati.html#come-è-composto-il-codice-fiscale",
    "title": "Codici fiscali, GDPR & Python",
    "section": "10 Come è composto il codice fiscale",
    "text": "10 Come è composto il codice fiscale\nIl codice fiscale italiano è composto da 16 caratteri alfanumerici, che rappresentano una combinazione di lettere e numeri, e viene calcolato sulla base dei dati anagrafici del soggetto. La sua struttura è la seguente:"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#cognome-3-lettere",
    "href": "posts/2501_CF/CfAnonimizzati.html#cognome-3-lettere",
    "title": "Codici fiscali, GDPR & Python",
    "section": "11 1. Cognome (3 lettere)",
    "text": "11 1. Cognome (3 lettere)\n\nLe prime tre lettere sono prese dal cognome:\nVengono usate le prime tre consonanti.\nSe il cognome ha meno di tre consonanti, si usano le vocali per arrivare a tre lettere.\nSe il cognome ha meno di tre lettere, si aggiunge la lettera “X”."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#nome-3-lettere",
    "href": "posts/2501_CF/CfAnonimizzati.html#nome-3-lettere",
    "title": "Codici fiscali, GDPR & Python",
    "section": "12 2. Nome (3 lettere)",
    "text": "12 2. Nome (3 lettere)\n\nLe successive tre lettere derivano dal nome:\nSi prendono le prime tre consonanti.\nSe il nome ha più di tre consonanti, si prendono la prima, la terza e la quarta.\nSe il nome ha meno di tre consonanti, si completano con le vocali.\nAnche in questo caso, se il nome ha meno di tre lettere, si aggiunge la “X”."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#data-di-nascita-e-sesso-6-caratteri",
    "href": "posts/2501_CF/CfAnonimizzati.html#data-di-nascita-e-sesso-6-caratteri",
    "title": "Codici fiscali, GDPR & Python",
    "section": "13 3. Data di nascita e sesso (6 caratteri)",
    "text": "13 3. Data di nascita e sesso (6 caratteri)\n\nAnno di nascita (2 cifre): le ultime due cifre dell’anno (es. 1990 → 90).\nMese di nascita (1 lettera): ogni mese è rappresentato da una lettera:\nGennaio: A, Febbraio: B, Marzo: C, Aprile: D, Maggio: E, Giugno: H, Luglio: L, Agosto: M, Settembre: P, Ottobre: R, Novembre: S, Dicembre: T.\nGiorno di nascita e sesso (2 cifre):\nPer gli uomini si usa il giorno di nascita (es. 05 → 05).\nPer le donne, al giorno si aggiunge 40 (es. 05 → 45)."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#comune-o-stato-estero-di-nascita-4-caratteri",
    "href": "posts/2501_CF/CfAnonimizzati.html#comune-o-stato-estero-di-nascita-4-caratteri",
    "title": "Codici fiscali, GDPR & Python",
    "section": "14 4. Comune o Stato estero di nascita (4 caratteri)",
    "text": "14 4. Comune o Stato estero di nascita (4 caratteri)\n\nÈ rappresentato da un codice numerico o alfanumerico, assegnato a ogni comune italiano o stato estero."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#carattere-di-controllo-1-carattere",
    "href": "posts/2501_CF/CfAnonimizzati.html#carattere-di-controllo-1-carattere",
    "title": "Codici fiscali, GDPR & Python",
    "section": "15 5. Carattere di controllo (1 carattere)",
    "text": "15 5. Carattere di controllo (1 carattere)\n\nL’ultimo carattere è un carattere di controllo, calcolato secondo un algoritmo basato su tutti i caratteri precedenti. Serve a verificare la correttezza del codice fiscale."
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#esempio-1",
    "href": "posts/2501_CF/CfAnonimizzati.html#esempio-1",
    "title": "Codici fiscali, GDPR & Python",
    "section": "16 Esempio",
    "text": "16 Esempio\nUna persona nata il 15 marzo 1990 a Roma, di sesso femminile, con cognome “Rossi” e nome “Maria”:\n\nCognome: ROS → ROS\nNome: MAR → MAR\nAnno di nascita: 90\nMese: C (marzo)\nGiorno e sesso: 55 (15 + 40)\nComune: H501 (Roma)\nCodice di controllo: calcolato come “Z” (esempio).\n\nCodice fiscale: ROSMAR90C55H501Z"
  },
  {
    "objectID": "posts/2501_CF/CfAnonimizzati.html#la-pseudoanomizzazione-di-rm501z",
    "href": "posts/2501_CF/CfAnonimizzati.html#la-pseudoanomizzazione-di-rm501z",
    "title": "Codici fiscali, GDPR & Python",
    "section": "17 La pseudoanomizzazione di R**M********501Z",
    "text": "17 La pseudoanomizzazione di R**M********501Z\nIl punto 4 è una parte “delicata”: i codici dei comuni sono univoci; non sono univoci se si rimuove la lettera iniziale e si considerano solo le cifre.\nI codici dei comuni italiani sono composti da una lettera (che identifica la provincia) seguita da un numero a tre cifre (che identifica il comune all’interno della provincia).\nIl codice fiscale contiene il codice catastale (noto anche come codice Belfiore) del luogo di nascita\nLa combinazione completa (es. “H501” per Roma) è univoca, ma se si considera solo la parte numerica (es. “501”), ci potrebbero essere più comuni con lo stesso numero in province diverse:\n\nRoma ha il codice H501.\nTorino ha il codice L501.\n\nSe togliamo la lettera, rimarrebbe solo 501, che non è più sufficiente per distinguere i comuni.\nSiamo al sicuro così? Apparentemente, si!"
  },
  {
    "objectID": "posts/2504_FTI/FTI.html",
    "href": "posts/2504_FTI/FTI.html",
    "title": "Fondo per il sostegno alla transizione industriale",
    "section": "",
    "text": "cover\nIl Fondo per il sostegno alla transizione industriale si rivolge alle imprese che investono nella tutela ambientale e ha l’obiettivo di favorire l’adeguamento del sistema produttivo italiano alle politiche UE sulla lotta ai cambiamenti climatici."
  },
  {
    "objectID": "posts/2504_FTI/FTI.html#obiettivi-dello-studio",
    "href": "posts/2504_FTI/FTI.html#obiettivi-dello-studio",
    "title": "Fondo per il sostegno alla transizione industriale",
    "section": "1 obiettivi dello studio",
    "text": "1 obiettivi dello studio\n\nestrazione dati da PDF\nelaborazione #opendata\nETL con groupby vari"
  },
  {
    "objectID": "posts/2504_FTI/FTI.html#opendata-sul-registro-nazionale-degli-aiuti-di-stato",
    "href": "posts/2504_FTI/FTI.html#opendata-sul-registro-nazionale-degli-aiuti-di-stato",
    "title": "Fondo per il sostegno alla transizione industriale",
    "section": "2 Opendata sul registro Nazionale degli Aiuti di Stato",
    "text": "2 Opendata sul registro Nazionale degli Aiuti di Stato\n\nCAR: 27929\nSignificant Aid: 110221\n\n\nimport pyarrow.parquet as pq\nimport pandas as pd\nimport duckdb\nimport os\nos.chdir('D:/duckdb/files/RNA2/')\n\ncon = duckdb.connect()\ncon.execute(\"PRAGMA threads=8\")\ncon.execute(\"PRAGMA enable_object_cache\") \npd.options.display.float_format = '{:,}'.format\ndf =(con.execute(\"SELECT * FROM '*.parquet' where CAR = '27929' order by concessione desc\").df())\n\n\ndf[['DES_TIPO_BENEFICIARIO', 'REGIONE', \n'SETTORE_ATTIVITA','NOMINALE', 'AIUTO']].sample(10)\n\n\n\n\n\n\n\n\nDES_TIPO_BENEFICIARIO\nREGIONE\nSETTORE_ATTIVITA\nNOMINALE\nAIUTO\n\n\n\n\n8\nPMI\nToscana\nC.13.3\n853,211.0\n853,211.0\n\n\n12\nGrande impresa\nPiemonte\nC.24.5\n1,164,732.31\n1,164,732.31\n\n\n18\nGrande impresa\nLombardia\nC.20.2\n1,360,000.0\n1,360,000.0\n\n\n26\nGrande impresa\nFriuli-Venezia Giulia\nC.28.2\n60,000.0\n60,000.0\n\n\n29\nGrande impresa\nMarche\nC.20.1\n913,545.0\n913,545.0\n\n\n35\nGrande impresa\nPuglia\nC.10.7\n228,183.75\n228,183.75\n\n\n2\nGrande impresa\nLombardia\nC.21.1\n1,072,542.6\n1,072,542.6\n\n\n6\nPMI\nToscana\nC.13.3\n324,800.0\n324,800.0\n\n\n36\nGrande impresa\nPuglia\nC.10.7\n829,199.55\n829,199.55\n\n\n32\nGrande impresa\nPiemonte\nC.13.1\n158,400.0\n158,400.0\n\n\n\n\n\n\n\n\ndf[['NOMINALE', 'AIUTO']].sum()\n\nNOMINALE   33,142,352.72\nAIUTO      33,142,352.72\ndtype: float64\n\n\n\ndf.groupby('CONCESSIONE').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum')).sort_values(by= 'CONCESSIONE', ascending = False)\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nCONCESSIONE\n\n\n\n\n\n\n\n2025-01-08\n4\n3,131,064.8\n3,131,064.8\n\n\n2024-12-21\n6\n3,605,143.65\n3,605,143.65\n\n\n2024-12-20\n5\n7,576,305.32\n7,576,305.32\n\n\n2024-12-16\n1\n3,581,357.84\n3,581,357.84\n\n\n2024-12-10\n3\n3,751,060.0\n3,751,060.0\n\n\n2024-12-09\n9\n5,340,643.82\n5,340,643.82\n\n\n2024-12-04\n3\n2,014,706.25\n2,014,706.25\n\n\n2024-12-02\n3\n903,980.0\n903,980.0\n\n\n2024-11-21\n5\n3,238,091.04\n3,238,091.04\n\n\n\n\n\n\n\n\ndf.groupby('REGIONE').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nREGIONE\n\n\n\n\n\n\n\nCampania\n2\n2,391,060.0\n2,391,060.0\n\n\nEmilia-Romagna\n1\n3,581,357.84\n3,581,357.84\n\n\nFriuli-Venezia Giulia\n3\n1,708,200.0\n1,708,200.0\n\n\nLombardia\n6\n7,688,611.2\n7,688,611.2\n\n\nMarche\n3\n2,014,706.25\n2,014,706.25\n\n\nPiemonte\n12\n6,410,735.52\n6,410,735.52\n\n\nPuglia\n4\n1,918,557.48\n1,918,557.48\n\n\nToscana\n3\n1,773,474.0\n1,773,474.0\n\n\nVeneto\n5\n5,655,650.43\n5,655,650.43\n\n\n\n\n\n\n\n\ndf.groupby('DES_TIPO_BENEFICIARIO').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nDES_TIPO_BENEFICIARIO\n\n\n\n\n\n\n\nGrande impresa\n36\n31,368,878.72\n31,368,878.72\n\n\nPMI\n3\n1,773,474.0\n1,773,474.0\n\n\n\n\n\n\n\n\ndf.groupby('DES_PROCEDIMENTO').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nDES_PROCEDIMENTO\n\n\n\n\n\n\n\nEsenzione\n39\n33,142,352.72\n33,142,352.72\n\n\n\n\n\n\n\n\ndf.groupby('DESSETTORE_ATTIVITA_OBIETTIVO').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nDESSETTORE_ATTIVITA_OBIETTIVO\n\n\n\n\n\n\n\nAiuti alla Formazione (art.31)\n1\n6,654.0\n6,654.0\n\n\nAiuti per la tutela dell'ambiente | Aiuti agli investimenti a favore di misure di efficienza energetica diverse da quelle relative agli edifici (art. 38)\n14\n15,937,638.44\n15,937,638.44\n\n\nAiuti per la tutela dell'ambiente | Aiuti agli investimenti per l'uso efficiente delle risorse e per il sostegno alla transizione verso un'economia circolare (art. 47)\n13\n10,183,108.06\n10,183,108.06\n\n\nAiuti per la tutela dell'ambiente | Aiuti agli investimenti per la promozione di energia da fonti rinnovabili, di idrogeno rinnovabile e di cogenerazione ad alto rendimento (art. 41)\n11\n7,014,952.22\n7,014,952.22\n\n\n\n\n\n\n\n\ndf.groupby('SETTORE_ATTIVITA').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nSETTORE_ATTIVITA\n\n\n\n\n\n\n\nC.10.5\n1\n1,319,533.56\n1,319,533.56\n\n\nC.10.7\n4\n1,918,557.48\n1,918,557.48\n\n\nC.13.1\n3\n903,980.0\n903,980.0\n\n\nC.13.3\n3\n1,773,474.0\n1,773,474.0\n\n\nC.17.1\n2\n2,078,823.82\n2,078,823.82\n\n\nC.20.1\n6\n3,161,526.25\n3,161,526.25\n\n\nC.20.2\n1\n1,360,000.0\n1,360,000.0\n\n\nC.20.4\n1\n406,800.0\n406,800.0\n\n\nC.21.1\n4\n3,131,064.8\n3,131,064.8\n\n\nC.22.2\n2\n2,391,060.0\n2,391,060.0\n\n\nC.23.1\n1\n3,197,546.4\n3,197,546.4\n\n\nC.23.5\n1\n3,581,357.84\n3,581,357.84\n\n\nC.24.1\n2\n3,170,026.6100000003\n3,170,026.6100000003\n\n\nC.24.5\n2\n1,208,732.31\n1,208,732.31\n\n\nC.28.1\n3\n1,831,669.65\n1,831,669.65\n\n\nC.28.2\n3\n1,708,200.0\n1,708,200.0\n\n\n\n\n\n\n\n\ndf.groupby('DES_STRUMENTO').agg(CF_COUNT=('CF', 'count'),\n    NOMINALE_SUM=('NOMINALE', 'sum'),\n    AIUTO_SUM=('AIUTO', 'sum'))\n\n\n\n\n\n\n\n\nCF_COUNT\nNOMINALE_SUM\nAIUTO_SUM\n\n\nDES_STRUMENTO\n\n\n\n\n\n\n\nSovvenzione/Contributo in conto interessi\n39\n33,142,352.72\n33,142,352.72"
  },
  {
    "objectID": "posts/2504_FTI/FTI.html#analisi-pdf",
    "href": "posts/2504_FTI/FTI.html#analisi-pdf",
    "title": "Fondo per il sostegno alla transizione industriale",
    "section": "3 analisi PDF",
    "text": "3 analisi PDF\nattualmente sono state pubblicate\n\nPubblicata la graduatoria ai sensi del decreto direttoriale 30.08.2023\nScorrimento graduatoria\n“D:8R9_TRANSIZIONE_INDUSTRIALE_GRADUATORIA.pdf”\n“D:_TRANSIZIONE_INDUSTRIALE_Graduatoria24072024_def.pdf”"
  },
  {
    "objectID": "posts/2504_FTI/FTI.html#fonti",
    "href": "posts/2504_FTI/FTI.html#fonti",
    "title": "Fondo per il sostegno alla transizione industriale",
    "section": "4 Fonti",
    "text": "4 Fonti\n\nFondo per il sostegno alla transizione industriale – PNRR\nFondo transizione industriale\nAl via dal 5 febbraio lo sportello per accedere al Fondo per il sostegno alla transizione industriale\nFondo per il sostegno alla transizione industriale\nDecreto interministeriale 21 ottobre 2022 - Fondo per il sostegno alla transizione industriale\nDecreto direttoriale 30 agosto 2023\nDecreto interministeriale 21 ottobre 2022 \nLegge 30 dicembre 2021, n. 234, articolo 1, comma 478 e 479 - Bilancio Di Previsione dello Stato per l’anno finanziario 2022 e Bilancio Pluriennale per il triennio 2022-2024\nDecreto interministeriale 21 ottobre 2022 - Fondo per il sostegno alla transizione industriale\nFondo transizione industriale"
  },
  {
    "objectID": "posts/2506_IAInBanca/IaBanca.html",
    "href": "posts/2506_IAInBanca/IaBanca.html",
    "title": "Il tech in banca",
    "section": "",
    "text": "Un report di Bloomberg Intelligence prevede che l’intelligenza artificiale causerà la riduzione di circa 200.000 posti di lavoro nel settore bancario globale nei prossimi 3-5 anni (Bloomberg News, 2025).\nNel marzo del 2023, Goldman Sachs aveva pubblicato una ricerca secondo la quale nei successivi 10 anni si sarebbero persi 300 milioni di posti di lavoro.\nSecondo BCG l’utilizzo di strumenti di GenAI ridurrà i tempi di lavoro del 50% per singola attività.\nQuesto cambiamento riguarderà soprattutto mansioni ripetitive del back office e di assistenza clienti, ma porterà anche a un aumento della produttività e dei profitti per le banche, stimato tra il 12% e il 17%.\nSebbene molti posti di lavoro siano a rischio di automazione, si assisterà più a una trasformazione dei ruoli che a una sostituzione totale, con la creazione di nuove posizioni legate allo sviluppo e alla gestione dell’AI.\nIn un precedente articolo (Il Sole 24 Ore Mercoledì 4 Dicembre 2024) si discuteva dell’impatto della #GenAI evidenziando una mancanza di preparazione significativa da parte delle istituzioni.\nMentre molte banche si concentrano sul taglio dei costi tramite la GenAI (63% degli istituti secondo BCG), il successo delle strategie dipende soprattutto dal fattore umano (70%), attraverso la riqualificazione del personale e la trasformazione organizzativa.\nStudi di Banca d’Italia confermano l’alta esposizione del settore finanziario alla sostituzione automatizzata di posti di lavoro, sottolineando la necessità di investimenti significativi in formazione e upskilling per evitare conseguenze negative.\nSecondo il report #Bankit An assessment of occupational exposure to artificial intelligence in Italy, l’#IA è già presente e il suo impatto crescerà esponenzialmente.\nC’è però scarsezza di piani specifici per lo sviluppo delle competenze in GenAI nel settore bancario a livello globale (solo il 5% delle banche ne ha uno)."
  },
  {
    "objectID": "posts/2506_IAInBanca/IaBanca.html#le-tech",
    "href": "posts/2506_IAInBanca/IaBanca.html#le-tech",
    "title": "Il tech in banca",
    "section": "Le “Tech”",
    "text": "Le “Tech”\n\nMolte delle ultime tecnologie utilizzano l’intelligenza artificiale #IA e, in alcuni casi, robot (sia fisici che software) per migliorare i servizi bancari e finanziari:\nL’Intelligenza Artificiale (IA) è ampiamente utilizzata in quasi tutte le tecnologie per migliorare l’efficienza, personalizzare i servizi, analizzare grandi quantità di dati e rafforzare la sicurezza. I Robot Software, come i chatbot e i processi automatizzati (RPA), sono comuni in AI/ML in Banking, RegTech, WealthTech e altre aree per automatizzare le interazioni con i clienti e i processi interni. I Robot Fisici, meno comuni nel settore bancario, possono essere utilizzati in filiali sperimentali per migliorare l’esperienza del cliente o in ambito IoT, come ATM intelligenti."
  },
  {
    "objectID": "posts/2506_IAInBanca/IaBanca.html#tabella-delle-tech",
    "href": "posts/2506_IAInBanca/IaBanca.html#tabella-delle-tech",
    "title": "Il tech in banca",
    "section": "Tabella delle Tech",
    "text": "Tabella delle Tech\n\n\n\n\n\n\n\n\n\nTecnologia\nDescrizione\nEsempi\nLavori Ripetitivi Sostituibili\n\n\n\n\nAI/ML in Banking\nIntelligenza artificiale per automazione, prevenzione frodi e analisi.\nChatbot bancari, rilevamento frodi con AI.\nGestione delle richieste di base dei clienti, monitoraggio delle transazioni, analisi dei dati.\n\n\nBiometric Banking\nTecnologie biometriche per autenticazione sicura.\nRiconoscimento facciale, impronte digitali, scansione dell’iride.\nVerifica dell’identità manuale, controllo accessi fisici.\n\n\nCloud Banking Technology\nInfrastrutture cloud per maggiore agilità, scalabilità e riduzione dei costi.\nAWS, Microsoft Azure per servizi bancari.\nGestione manuale di infrastrutture IT e backup.\n\n\nCryptoTech\nTecnologie basate su blockchain e criptovalute.\nBinance, Coinbase, wallet digitali.\nEsecuzione manuale di transazioni ripetitive.\n\n\nCyberTech\nSoluzioni di cybersecurity per proteggere da attacchi e violazioni.\nAutenticazione biometrica, crittografia avanzata.\nMonitoraggio manuale della sicurezza, risposta a minacce.\n\n\nDataTech\nAnalisi dei Big Data per decisioni strategiche e personalizzazione.\nCRM avanzati, strumenti di data visualization.\nElaborazione manuale di report e analisi dati.\n\n\nFinTech\nInnovazioni nei servizi finanziari tradizionali.\nPayPal, Stripe, Revolut, N26.\nElaborazione di pagamenti, apertura conti, riconciliazioni manuali.\n\n\nGreen Finance Technology\nSoluzioni per gestire finanziamenti sostenibili e monitorare l’impatto ambientale.\nPiattaforme ESG per il monitoraggio ambientale.\nRaccolta manuale di dati ESG, preparazione di report ambientali.\n\n\nInsurTech\nTecnologie per migliorare i processi assicurativi.\nLemonade, Trov.\nElaborazione manuale di richieste di sinistri, valutazione rischi di base.\n\n\nIoT in Banking\nDispositivi connessi per migliorare l’esperienza bancaria.\nWearable per pagamenti contactless, ATM intelligenti.\nOperazioni di cassa fisica, interazioni di base con i clienti.\n\n\nLendTech\nTecnologie per il prestito e valutazioni del credito.\nLendingClub, Funding Circle.\nValutazioni manuali del credito, gestione delle pratiche di prestito.\n\n\nOpen Banking Technology\nAPI per condividere dati finanziari con terze parti in modo sicuro.\nSoluzioni basate su PSD2 in Europa.\nRaccolta e condivisione manuale di dati con terze parti.\n\n\nPayTech\nTecnologie per pagamenti digitali.\nGoogle Pay, Apple Pay, SumUp.\nElaborazione manuale dei pagamenti, riconciliazione transazioni.\n\n\nPropTech\nTecnologie per il settore immobiliare.\nZillow, Casavo, piattaforme per la valutazione immobiliare.\nValutazioni immobiliari manuali, raccolta dati di mercato.\n\n\nRegTech\nTecnologie per la conformità normativa.\nPiattaforme di compliance automatizzata, analisi normativa con AI.\nControllo manuale della conformità normativa, generazione report di audit.\n\n\nWealthTech\nSoluzioni per la gestione del patrimonio e investimenti.\nBetterment, eToro, Moneyfarm.\nAnalisi patrimoniale di base, consulenza finanziaria ripetitiva."
  },
  {
    "objectID": "posts/2508_RNA/RNA.html",
    "href": "posts/2508_RNA/RNA.html",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "",
    "text": "Il Registro Nazionale degli Aiuti di Stato #RNA è uno strumento gestito dal Ministero delle Imprese e del Made in Italy (ex Ministero dello Sviluppo Economico - MiSE), che permette di raccogliere, monitorare e pubblicare informazioni relative agli aiuti di Stato concessi alle imprese e agli enti in Italia."
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_12.parquet",
    "href": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_12.parquet",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "7.1 OpenData_Aiuti_2024_12.parquet",
    "text": "7.1 OpenData_Aiuti_2024_12.parquet\n\n20250111 (107273, 21)\n20250105 (105454, 21)\n20250101 (100270, 21)\n20241221 (91504, 21)\n20241214 (36363, 21)\n20241207 (16243, 21)"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_11.parquet",
    "href": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_11.parquet",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "7.2 OpenData_Aiuti_2024_11.parquet",
    "text": "7.2 OpenData_Aiuti_2024_11.parquet\n\n20250111 (141510, 21)\n20250107 (141523, 21)\n20241201 (136061, 21)\n20241130 (115693, 21)\n20241124 (115693, 21)\n20241117 (19701, 21)\n20241110 (19701, 21)"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_10.parquet",
    "href": "posts/2508_RNA/RNA.html#opendata_aiuti_2024_10.parquet",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "7.3 OpenData_Aiuti_2024_10.parquet",
    "text": "7.3 OpenData_Aiuti_2024_10.parquet\n\n20250107 (238465, 21)\n20241110 (238076, 21)\n20241101 (122656, 21)\n20241029 (122656, 21)\n20241026 (59146, 21)\n20241019 (59146, 21)"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#quanti-aiuti-contiene",
    "href": "posts/2508_RNA/RNA.html#quanti-aiuti-contiene",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.1 Quanti aiuti contiene",
    "text": "8.1 Quanti aiuti contiene\n\ndf = con.execute(\"SELECT * FROM 'OpenData_Aiuti_2025_01.parquet'\").df()\ndf.shape\n\n(4520, 21)"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#quali-misure-hanno-più-aiuti",
    "href": "posts/2508_RNA/RNA.html#quali-misure-hanno-più-aiuti",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.2 Quali misure hanno più aiuti",
    "text": "8.2 Quali misure hanno più aiuti\n\ndf = con.execute(\"SELECT upper(misura) MISURA, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' group by 1 order by 2 desc limit 10\").df()\ndf\n\n\n\n\n\n\n\n\nMISURA\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\nFONDO DI GARANZIA PER LE PICCOLE E MEDIE IMPRESE\n1968\n255,839,016.0\n16,826,417.0\n\n\n1\nREGOLAMENTO PER I FONDI INTERPROFESSIONALI PER LA FORMAZIONE CONTINUA PER LA CONCESSIONI DI AIUTI DI STATO ESENTATI AI SENSI DEL REGOLAMENTO CE N.651/2014 E IN REGIME DE MINIMIS AI SENSI DEL REGOLAMENTO CE N.1407/2013\n1562\n5,649,132.0\n5,484,626.0\n\n\n2\nBANDO VOUCHER TRANSIZIONE DIGITALE ED ECOLOGICA E PER SISTEMI DI SICUREZZA 2024\n97\n586,960.0\n586,960.0\n\n\n3\nPNRR, M1C3 INVESTIMENTI 4.2.1; 4.2.2 AVVISO PUBBLICO EX ARTT. 1 E 4 DL 152/2021\n79\n5,176,411.0\n4,636,411.0\n\n\n4\nCREDITO D'ESERCIZIO\n74\n1,659,000.0\n68,097.0\n\n\n5\nBANDO PER CONTRIBUTI PER LA TRANSIZIONE DIGITALE ED ECOLOGICA DELLE IMPRESE ANNO 2024-2025\n37\n138,827.0\n138,827.0\n\n\n6\nINVESTIMENTI SOSTENIBILI 4.0 (PN RIC 2021-2027)\n36\n30,234,444.0\n19,391,190.0\n\n\n7\nPI ARTIGIANATO\n35\n500,507.0\n538,507.0\n\n\n8\nCOVID-19: FONDO DI GARANZIA PMI - MODIFICA SA.56966, SA.57625, SA.59655\n30\n94,030.0\n94,030.0\n\n\n9\nAPPROVAZIONE AVVISO BANDO DOTE IMPRESA COLLOCAMENTO MIRATO - FONDO 2022\n28\n244,546.0\n244,546.0"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#quali-concedenti-hanno-più-aiuti",
    "href": "posts/2508_RNA/RNA.html#quali-concedenti-hanno-più-aiuti",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.3 Quali concedenti hanno più aiuti",
    "text": "8.3 Quali concedenti hanno più aiuti\n\ndf = con.execute(\"SELECT upper(concedente) CONCEDENTE, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' group by 1 order by 2 desc limit 10\").df()\ndf\n\n\n\n\n\n\n\n\nCONCEDENTE\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\nBANCA DEL MEZZOGIORNO MEDIOCREDITO CENTRALE S.P.A.\n1998\n255,933,046.0\n16,920,447.0\n\n\n1\nFONDER\n881\n1,520,065.0\n1,427,843.0\n\n\n2\nFONARCOM\n219\n384,867.0\n384,867.0\n\n\n3\nFONDO FOR.TE\n156\n879,118.0\n879,118.0\n\n\n4\nREGIONE SICILIANA - DIPARTIMENTO ATTIVITA' PRODUTTIVE\n111\n2,684,025.0\n871,858.0\n\n\n5\nFONDIMPRESA\n103\n2,044,845.0\n2,044,845.0\n\n\n6\nFONDO ARTIGIANATO FORMAZIONE\n102\n693,014.0\n622,305.0\n\n\n7\nCAMERA DI COMMERCIO, INDUSTRIA, ARTIGIANATO E AGRICOLTURA DELLA TOSCANA NORD OVEST\n97\n586,960.0\n586,960.0\n\n\n8\nAGENZIA NAZIONALE PER L'ATTRAZIONE DEGLI INVESTIMENTI E LO SVILUPPO D'IMPRESA SPA - INVITALIA (05678721001)\n81\n5,584,086.0\n4,808,253.0\n\n\n9\nINVITALIA - AGENZIA NAZIONALE PER L'ATTRAZIONE DEGLI INVESTIMENTI E LO SVILUPPO D'IMPRESA S.P.A.\n71\n34,794,624.0\n23,580,585.0"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#gli-aiuti-in-ordine-di-valore-nominale",
    "href": "posts/2508_RNA/RNA.html#gli-aiuti-in-ordine-di-valore-nominale",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.4 Gli aiuti in ordine di valore nominale €",
    "text": "8.4 Gli aiuti in ordine di valore nominale €\n\ndf = con.execute(\"SELECT upper(concedente) CONCEDENTE, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' group by 1 order by 3 desc limit 10\").df()\ndf\n\n\n\n\n\n\n\n\nCONCEDENTE\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\nBANCA DEL MEZZOGIORNO MEDIOCREDITO CENTRALE S.P.A.\n1998\n255,933,046.0\n16,920,447.0\n\n\n1\nGSE - GESTORE SERVIZI ENERGETICI S.P.A.\n10\n43,488,060.0\n24,501,008.0\n\n\n2\nINVITALIA - AGENZIA NAZIONALE PER L'ATTRAZIONE DEGLI INVESTIMENTI E LO SVILUPPO D'IMPRESA S.P.A.\n71\n34,794,624.0\n23,580,585.0\n\n\n3\nMINISTERO DELLE IMPRESE E DEL MADE IN ITALY - DIPARTIMENTO PER LE POLITICHE PER LE IMPRESE - DIREZIONE GENERALE PER GLI INCENTIVI ALLE IMPRESE\n43\n19,699,510.0\n14,552,950.0\n\n\n4\nAGENZIA NAZIONALE PER L'ATTRAZIONE DEGLI INVESTIMENTI E LO SVILUPPO D'IMPRESA SPA - INVITALIA (05678721001)\n81\n5,584,086.0\n4,808,253.0\n\n\n5\nGSE GESTORE SERVIZI ENERGETICI S.P.A.\n19\n3,990,326.0\n3,990,326.0\n\n\n6\nINAIL - DIREZIONE CENTRALE PREVENZIONE\n33\n2,783,035.0\n2,121,624.0\n\n\n7\nREGIONE SICILIANA - DIPARTIMENTO ATTIVITA' PRODUTTIVE\n111\n2,684,025.0\n871,858.0\n\n\n8\nUNIVERSIT DEGLI STUDI DI NAPOLI FEDERICO II\n16\n2,114,354.0\n1,356,686.0\n\n\n9\nFONDIMPRESA\n103\n2,044,845.0\n2,044,845.0"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#valori-raggruppati-per-data",
    "href": "posts/2508_RNA/RNA.html#valori-raggruppati-per-data",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.5 valori raggruppati per data",
    "text": "8.5 valori raggruppati per data\n\ndf = con.execute(\"SELECT CONCESSIONE, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' \\\n      group by 1 order by 1 desc\").df()\ndf\n\n\n\n\n\n\n\n\nCONCESSIONE\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\n2025-01-10\n1956\n225,006,633.0\n17,667,677.0\n\n\n1\n2025-01-09\n1146\n29,757,570.0\n21,616,680.0\n\n\n2\n2025-01-08\n297\n13,854,520.0\n11,472,341.0\n\n\n3\n2025-01-07\n904\n83,763,955.0\n34,630,706.0\n\n\n4\n2025-01-06\n5\n50,002.0\n50,002.0\n\n\n5\n2025-01-05\n1\n14,493.0\n14,493.0\n\n\n6\n2025-01-04\n3\n6,220.0\n6,220.0\n\n\n7\n2025-01-03\n88\n689,342.0\n633,539.0\n\n\n8\n2025-01-02\n120\n38,997,416.0\n22,144,828.0"
  },
  {
    "objectID": "posts/2508_RNA/RNA.html#analisi-per-concedente",
    "href": "posts/2508_RNA/RNA.html#analisi-per-concedente",
    "title": "Registro Nazionale degli Aiuti di Stato",
    "section": "8.6 Analisi per concedente",
    "text": "8.6 Analisi per concedente\n\n8.6.1 Gli aiuti concessi da Invitalia\n\ndf = con.execute(\"SELECT upper(misura) MISURA, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' where concedente like '%INVI%' \\\n      group by 1 order by 3 desc limit 10\").df()\ndf\n\n\n\n\n\n\n\n\nMISURA\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\nINVESTIMENTI SOSTENIBILI 4.0 (PN RIC 2021-2027)\n36\n30,234,444.0\n19,391,190.0\n\n\n1\nPNRR, M1C3 INVESTIMENTI 4.2.1; 4.2.2 AVVISO PUBBLICO EX ARTT. 1 E 4 DL 152/2021\n79\n5,176,411.0\n4,636,411.0\n\n\n2\nFONDO PER IL SOSTEGNO ALLA TRANSIZIONE INDUSTRIALE\n4\n3,131,066.0\n3,131,066.0\n\n\n3\nNIT0 - NUOVE IMPRESE A TASSO ZERO\n6\n409,946.0\n207,143.0\n\n\n4\n4:2:5 FONDO ROTATIVO IMPRESE (FRI) PER IL SOSTEGNO ALLE IMPRESE E GLI INVESTIMENTI DI SVILUPPO\n2\n407,675.0\n171,842.0\n\n\n5\nRESTO AL SUD\n12\n347,925.0\n342,667.0\n\n\n6\nSMART&START - RIORDINO DEGLI INTERVENTI DI SOSTEGNO ALLA NASCITA E ALLO SVILUPPO DI START-UP INNOVATIVE IN TUTTO IL TERRITORIO NAZIONALE - VERSIONE MODIFICATA DAL CODICE CE SA.55753\n2\n309,576.0\n204,666.0\n\n\n7\nINTERVENTO AGEVOLATIVO PER LA BREVETTAZIONE E LA VALORIZZAZIONE ECONOMICA DEI BREVETTI A FAVORE DI MICRO PICCOLE E MEDIE IMPRESE\n3\n289,067.0\n231,253.0\n\n\n8\nFONDO A SOSTEGNO DELLE PICCOLE E MEDIE IMPRESE CREATIVE\n7\n67,600.0\n67,600.0\n\n\n9\nAGEVOLAZIONI NEL CRATERE SISMICO AQUILANO MISURA II\" PROGRAMMI DI INVESTIMENTO FINALIZZATI ALLA VALORIZZAZIONE E COMMERCIALIZZAZIONE DEI PRODOTTI DI ECCELLENZA DEL TERRITORIO\"\n1\n5,000.0\n5,000.0\n\n\n\n\n\n\n\n\n\n8.6.2 valori raggruppati per data\n\ndf = con.execute(\"SELECT CONCESSIONE, count(CAR) CONCESSIONI, \\\n  sum(cast(NOMINALE as integer)) NOMINALE, sum(cast(AIUTO as integer)) AIUTI \\\n    FROM 'OpenData_Aiuti_2025_01.parquet' where concedente like '%INVI%' \\\n      group by 1 order by 1 desc\").df()\ndf\n\n\n\n\n\n\n\n\nCONCESSIONE\nCONCESSIONI\nNOMINALE\nAIUTI\n\n\n\n\n0\n2025-01-10\n20\n631,420.0\n495,439.0\n\n\n1\n2025-01-09\n2\n309,576.0\n204,666.0\n\n\n2\n2025-01-08\n14\n4,021,859.0\n3,656,132.0\n\n\n3\n2025-01-07\n116\n35,415,855.0\n24,032,601.0"
  },
  {
    "objectID": "index.html#perchè-un-data-scientist-al-contrario",
    "href": "index.html#perchè-un-data-scientist-al-contrario",
    "title": "Impara l’arte e mettila da parte",
    "section": "Perchè un data scientist al contrario?",
    "text": "Perchè un data scientist al contrario?\nSono laureato in economia, master in marketing Non sono partito dalla formazione che può avere uno statistico od un ingegnere che poi le deve applicare nel lavoro in un campo magari ostico al suo interesse\nHo una preparazione economica che ho voluto potenziare con soluzioni tecniche. Spesso vedo persone che si fermano se non hanno il dato pronto. Io me lo vado a costruire\nOgni tanto scriverò pensieri ad alta voce\n\nQuando hai dato lo stesso consiglio 3 volte, scrivi un post (David Robinson)"
  }
]